name: PR Checks

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read

jobs:
  pr-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check code formatting
        run: yarn spotless --check

      - name: Lint all projects
        run: yarn lint:all

      - name: Test all projects (includes validation tests)
        run: yarn test:all

      - name: Build all projects
        run: yarn build:all

  docker-validation:
    runs-on: ubuntu-latest
    needs: pr-checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate eBay Service Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.ebay-service
          push: false
          tags: ebay-service:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Validate API Gateway Dockerfile
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.api-gateway
          push: false
          tags: api-gateway:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  pr-quality-gate:
    runs-on: ubuntu-latest
    needs: [pr-checks, docker-validation]
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.pr-checks.result }}" != "success" || "${{ needs.docker-validation.result }}" != "success" ]]; then
            echo "❌ PR quality gate failed"
            exit 1
          else
            echo "✅ PR quality gate passed"
          fi
